package com.ankamagames.wakfu.common.binaryStorage;

public enum WakfuBinaryStorableType
{
    ACHIEVEMENT(1), 
    ACHIEVEMENT_VARIABLE(2), 
    ACHIEVEMENT_CATEGORY(3), 
    AREA_EFFECT(4), 
    AUDIO_MARKER_IE_PARAM(5), 
    BACKGROUND_FEEDBACK(6), 
    BACKGROUND_IE_PARAM(7), 
    BOAT(8), 
    BOAT_LINK(9), 
    BOMB_SPECIAL_ZONE(10), 
    BONUS_POINT_DISTRIBUTION_TABLE(11), 
    CANNON(12), 
    CENSORED_ENTRY(13), 
    CHAOS(14), 
    CHARAC_BASE(15), 
    CHARAC_GAIN_PER_LEVEL(16), 
    CITIZEN_RANK(17), 
    CLIENT_EVENT(18), 
    CLIMATE(19), 
    CLIMATE_BONUS(20), 
    CLIMATE_BONUS_LIST(21), 
    COLLECT_IE_PARAM(22), 
    CRAFT(23), 
    CRAFT_IE_PARAM(24), 
    DECORATION_IE_PARAM(25), 
    DESTRUCTIBLE_IE_PARAM(26), 
    DIALOG(27), 
    DRAGO(28), 
    EFFECT_GROUP(29), 
    GEM_BACKGROUND_IE_PARAM(30), 
    GENERIC_ACTIVABLE_IE_PARAM(31), 
    GROUND(32), 
    HAVEN_BAG_MODEL_VIEW(33), 
    INTERACTIVE_ELEMENT_MODEL(34), 
    ITEM(35), 
    ITEM_SET(36), 
    ITEM_TYPE(37), 
    LOOT_CHEST_IE_PARAM(38), 
    LOOT_LIST(39), 
    MARKET(40), 
    MARKET_BOARD_IE_PARAM(41), 
    MONSTER(42), 
    MONSTER_BLAHBLAH(43), 
    MONSTER_FIGHT_BUBBLE(44), 
    MONSTER_GROUP_TEMPLATE(45), 
    MONSTER_GROUP_TEMPLATE_TABLE(46), 
    MONSTER_TYPE(47), 
    MONSTER_TYPE_PEST(48), 
    MONSTER_TYPE_RELASHIONSHIP(49), 
    NATION(50), 
    NATION_COLORS(51), 
    NATION_LAW(52), 
    NATION_RANK(53), 
    PROTECTOR(54), 
    PROTECTOR_BUFF(55), 
    PROTECTOR_BUFF_LIST(56), 
    PROTECTOR_ECOSYSTEM_PROTECTION(57), 
    RECIPE(58), 
    REGISTRATION_EVENT(59), 
    RESOURCE(60), 
    RESOURCE_TYPE(61), 
    SCENARIO(62), 
    SCENARIO_CHALLENGE(63), 
    SKILL(64), 
    SKILL_ACTION(65), 
    SPELL(66), 
    STATE(67), 
    STATIC_EFFECT(68), 
    STOOL_IE_PARAM(69), 
    STORAGE_BOX(70), 
    STREET_LIGHT_IE_PARAM(71), 
    TELEPORTER(72), 
    TIMELINE_BUFF_LIST(73), 
    USER_GROUP_TEMPLATE(74), 
    WORLD_LOOT_LIST(75), 
    ZAAP(76), 
    ZAAP_LINK(77), 
    APTITUDE(78), 
    BOARD_IE_PARAM(79), 
    CHALLENGE_LOOT_LIST(80), 
    EMOTE(81), 
    EXCHANGE_IE_PARAM(82), 
    DISASSEMBLING_DROPS(83), 
    DISASSEMBLING_DROP_RATE(84), 
    RECYCLE_MACHINE_IE_PARAM(85), 
    AVATAR_BREED(86), 
    ARCADE_DUNGEON(87), 
    ARCADE_EVENT(88), 
    ARCADE_BONUS(89), 
    ARCADE_CHALLENGE(90), 
    ARCADE_WAVE_COMPOSITION(91), 
    GENERIC_IE_PARAM(92), 
    STATUE_IE_PARAM(93), 
    LADDER_BOARD_IE_PARAM(94), 
    DUNGEON_DISPLAYER_IE_PARAM(95), 
    REWARD_DISPLAYER_IE_PARAM(96), 
    HAVEN_WORLD_BUILDING(97), 
    ALMANACH_ENTRY(98), 
    ALMANACH_DATE(99), 
    HAVEN_WORLD_DEFINITION(100), 
    HAVEN_WORLD_PATCH_DEFINITION(101), 
    HAVEN_WORLD_BUILDING_DEFINITION(102), 
    HAVEN_WORLD_BUILDING_EVOLUTION(103), 
    HAVEN_WORLD_BUILDING_CATALOG(104), 
    BOOKCASE_IE_PARAM(105), 
    EQUIPABLE_DUMMY_IE_PARAM(106), 
    HAVEN_WORLD_BUILDING_VISUAL_DEFINITION(107), 
    KROSMOZ_GAME_BOARD_IE_PARAM(108), 
    KROSMOZ_GAME_COLLECTION_IE_PARAM(109), 
    HAVEN_WORLD_ENTRY_IE_PARAM(110), 
    HAVEN_WORLD_BOARD_IE_PARAM(111), 
    KROSMOZ_FIGURE_ITEM_LINK(112), 
    KROSMOZ_FIGURE(113), 
    LIGHT_LOOT_LIST(114), 
    ACHIEVEMENT_LIST(115), 
    AVATAR_BREED_COLORS(116), 
    PET(117), 
    DOOR_IE_PARAM(118), 
    DUNGEON(119), 
    LOCK(120), 
    BAGS(121), 
    TREASURE(122), 
    MAGICRAFT_LOOT_LIST(123), 
    GEM_AND_POWDER(124), 
    DUNGEON_TP(125), 
    HAVEN_WORLD_BUILDING_DECO_DEFINITION(126), 
    MONSTER_GROUP_TEMPLATE_TABLE_HW(127), 
    INTERACTIVE_ELEMENT_TEMPLATE(128), 
    TUTORIAL(129), 
    FIGHT_CHALLENGE(130), 
    COMPANION_ITEM(131), 
    FIGHT_CHALLENGE_MONSTER(132), 
    SECRET(133), 
    INSTANCE_INTERACTION_LEVEL(134), 
    ABILITY(135), 
    FIXED_ABILITY_CATEGORY(136), 
    MONSTER_TYPE_DUNGEON(137);
    
    private final int m_id;
    
    public static WakfuBinaryStorableType fromId(final int id) {
        for (final WakfuBinaryStorableType type : values()) {
            if (type.m_id == id) {
                return type;
            }
        }
        return null;
    }
    
    private WakfuBinaryStorableType(final int id) {
        this.m_id = id;
    }
    
    public int getId() {
        return this.m_id;
    }
}
